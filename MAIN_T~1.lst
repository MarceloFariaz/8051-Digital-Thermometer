                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.2 #5199 (Jul 29 2008) (MINGW32)
                              4 ; This file was generated Mon Jul 03 21:05:45 2017
                              5 ;--------------------------------------------------------
                              6 	.module MAIN_T_1
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _toCelsius
                             14 	.globl _toFahrenheit
                             15 	.globl _printTemp
                             16 	.globl _Display
                             17 	.globl _delay
                             18 	.globl _CY
                             19 	.globl _AC
                             20 	.globl _F0
                             21 	.globl _RS1
                             22 	.globl _RS0
                             23 	.globl _OV
                             24 	.globl _F1
                             25 	.globl _P
                             26 	.globl _PS
                             27 	.globl _PT1
                             28 	.globl _PX1
                             29 	.globl _PT0
                             30 	.globl _PX0
                             31 	.globl _RD
                             32 	.globl _WR
                             33 	.globl _T1
                             34 	.globl _T0
                             35 	.globl _INT1
                             36 	.globl _INT0
                             37 	.globl _TXD
                             38 	.globl _RXD
                             39 	.globl _P3_7
                             40 	.globl _P3_6
                             41 	.globl _P3_5
                             42 	.globl _P3_4
                             43 	.globl _P3_3
                             44 	.globl _P3_2
                             45 	.globl _P3_1
                             46 	.globl _P3_0
                             47 	.globl _EA
                             48 	.globl _ES
                             49 	.globl _ET1
                             50 	.globl _EX1
                             51 	.globl _ET0
                             52 	.globl _EX0
                             53 	.globl _P2_7
                             54 	.globl _P2_6
                             55 	.globl _P2_5
                             56 	.globl _P2_4
                             57 	.globl _P2_3
                             58 	.globl _P2_2
                             59 	.globl _P2_1
                             60 	.globl _P2_0
                             61 	.globl _SM0
                             62 	.globl _SM1
                             63 	.globl _SM2
                             64 	.globl _REN
                             65 	.globl _TB8
                             66 	.globl _RB8
                             67 	.globl _TI
                             68 	.globl _RI
                             69 	.globl _P1_7
                             70 	.globl _P1_6
                             71 	.globl _P1_5
                             72 	.globl _P1_4
                             73 	.globl _P1_3
                             74 	.globl _P1_2
                             75 	.globl _P1_1
                             76 	.globl _P1_0
                             77 	.globl _TF1
                             78 	.globl _TR1
                             79 	.globl _TF0
                             80 	.globl _TR0
                             81 	.globl _IE1
                             82 	.globl _IT1
                             83 	.globl _IE0
                             84 	.globl _IT0
                             85 	.globl _P0_7
                             86 	.globl _P0_6
                             87 	.globl _P0_5
                             88 	.globl _P0_4
                             89 	.globl _P0_3
                             90 	.globl _P0_2
                             91 	.globl _P0_1
                             92 	.globl _P0_0
                             93 	.globl _B
                             94 	.globl _ACC
                             95 	.globl _PSW
                             96 	.globl _IP
                             97 	.globl _P3
                             98 	.globl _IE
                             99 	.globl _P2
                            100 	.globl _SBUF
                            101 	.globl _SCON
                            102 	.globl _P1
                            103 	.globl _TH1
                            104 	.globl _TH0
                            105 	.globl _TL1
                            106 	.globl _TL0
                            107 	.globl _TMOD
                            108 	.globl _TCON
                            109 	.globl _PCON
                            110 	.globl _DPH
                            111 	.globl _DPL
                            112 	.globl _SP
                            113 	.globl _P0
                            114 	.globl _unit
                            115 	.globl _tempF
                            116 	.globl _tempC
                            117 	.globl _lastsw3
                            118 	.globl _lastsw2
                            119 	.globl _lastsw1
                            120 ;--------------------------------------------------------
                            121 ; special function registers
                            122 ;--------------------------------------------------------
                            123 	.area RSEG    (DATA)
                    0080    124 _P0	=	0x0080
                    0081    125 _SP	=	0x0081
                    0082    126 _DPL	=	0x0082
                    0083    127 _DPH	=	0x0083
                    0087    128 _PCON	=	0x0087
                    0088    129 _TCON	=	0x0088
                    0089    130 _TMOD	=	0x0089
                    008A    131 _TL0	=	0x008a
                    008B    132 _TL1	=	0x008b
                    008C    133 _TH0	=	0x008c
                    008D    134 _TH1	=	0x008d
                    0090    135 _P1	=	0x0090
                    0098    136 _SCON	=	0x0098
                    0099    137 _SBUF	=	0x0099
                    00A0    138 _P2	=	0x00a0
                    00A8    139 _IE	=	0x00a8
                    00B0    140 _P3	=	0x00b0
                    00B8    141 _IP	=	0x00b8
                    00D0    142 _PSW	=	0x00d0
                    00E0    143 _ACC	=	0x00e0
                    00F0    144 _B	=	0x00f0
                            145 ;--------------------------------------------------------
                            146 ; special function bits
                            147 ;--------------------------------------------------------
                            148 	.area RSEG    (DATA)
                    0080    149 _P0_0	=	0x0080
                    0081    150 _P0_1	=	0x0081
                    0082    151 _P0_2	=	0x0082
                    0083    152 _P0_3	=	0x0083
                    0084    153 _P0_4	=	0x0084
                    0085    154 _P0_5	=	0x0085
                    0086    155 _P0_6	=	0x0086
                    0087    156 _P0_7	=	0x0087
                    0088    157 _IT0	=	0x0088
                    0089    158 _IE0	=	0x0089
                    008A    159 _IT1	=	0x008a
                    008B    160 _IE1	=	0x008b
                    008C    161 _TR0	=	0x008c
                    008D    162 _TF0	=	0x008d
                    008E    163 _TR1	=	0x008e
                    008F    164 _TF1	=	0x008f
                    0090    165 _P1_0	=	0x0090
                    0091    166 _P1_1	=	0x0091
                    0092    167 _P1_2	=	0x0092
                    0093    168 _P1_3	=	0x0093
                    0094    169 _P1_4	=	0x0094
                    0095    170 _P1_5	=	0x0095
                    0096    171 _P1_6	=	0x0096
                    0097    172 _P1_7	=	0x0097
                    0098    173 _RI	=	0x0098
                    0099    174 _TI	=	0x0099
                    009A    175 _RB8	=	0x009a
                    009B    176 _TB8	=	0x009b
                    009C    177 _REN	=	0x009c
                    009D    178 _SM2	=	0x009d
                    009E    179 _SM1	=	0x009e
                    009F    180 _SM0	=	0x009f
                    00A0    181 _P2_0	=	0x00a0
                    00A1    182 _P2_1	=	0x00a1
                    00A2    183 _P2_2	=	0x00a2
                    00A3    184 _P2_3	=	0x00a3
                    00A4    185 _P2_4	=	0x00a4
                    00A5    186 _P2_5	=	0x00a5
                    00A6    187 _P2_6	=	0x00a6
                    00A7    188 _P2_7	=	0x00a7
                    00A8    189 _EX0	=	0x00a8
                    00A9    190 _ET0	=	0x00a9
                    00AA    191 _EX1	=	0x00aa
                    00AB    192 _ET1	=	0x00ab
                    00AC    193 _ES	=	0x00ac
                    00AF    194 _EA	=	0x00af
                    00B0    195 _P3_0	=	0x00b0
                    00B1    196 _P3_1	=	0x00b1
                    00B2    197 _P3_2	=	0x00b2
                    00B3    198 _P3_3	=	0x00b3
                    00B4    199 _P3_4	=	0x00b4
                    00B5    200 _P3_5	=	0x00b5
                    00B6    201 _P3_6	=	0x00b6
                    00B7    202 _P3_7	=	0x00b7
                    00B0    203 _RXD	=	0x00b0
                    00B1    204 _TXD	=	0x00b1
                    00B2    205 _INT0	=	0x00b2
                    00B3    206 _INT1	=	0x00b3
                    00B4    207 _T0	=	0x00b4
                    00B5    208 _T1	=	0x00b5
                    00B6    209 _WR	=	0x00b6
                    00B7    210 _RD	=	0x00b7
                    00B8    211 _PX0	=	0x00b8
                    00B9    212 _PT0	=	0x00b9
                    00BA    213 _PX1	=	0x00ba
                    00BB    214 _PT1	=	0x00bb
                    00BC    215 _PS	=	0x00bc
                    00D0    216 _P	=	0x00d0
                    00D1    217 _F1	=	0x00d1
                    00D2    218 _OV	=	0x00d2
                    00D3    219 _RS0	=	0x00d3
                    00D4    220 _RS1	=	0x00d4
                    00D5    221 _F0	=	0x00d5
                    00D6    222 _AC	=	0x00d6
                    00D7    223 _CY	=	0x00d7
                            224 ;--------------------------------------------------------
                            225 ; overlayable register banks
                            226 ;--------------------------------------------------------
                            227 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     228 	.ds 8
                            229 ;--------------------------------------------------------
                            230 ; internal ram data
                            231 ;--------------------------------------------------------
                            232 	.area DSEG    (DATA)
   0000                     233 _lastsw1::
   0000                     234 	.ds 2
   0002                     235 _lastsw2::
   0002                     236 	.ds 2
   0004                     237 _lastsw3::
   0004                     238 	.ds 2
   0006                     239 _tempC::
   0006                     240 	.ds 2
   0008                     241 _tempF::
   0008                     242 	.ds 2
                            243 ;--------------------------------------------------------
                            244 ; overlayable items in internal ram 
                            245 ;--------------------------------------------------------
                            246 	.area OSEG    (OVR,DATA)
                            247 ;--------------------------------------------------------
                            248 ; Stack segment in internal ram 
                            249 ;--------------------------------------------------------
                            250 	.area	SSEG	(DATA)
   0000                     251 __start__stack:
   0000                     252 	.ds	1
                            253 
                            254 ;--------------------------------------------------------
                            255 ; indirectly addressable internal ram data
                            256 ;--------------------------------------------------------
                            257 	.area ISEG    (DATA)
                            258 ;--------------------------------------------------------
                            259 ; absolute internal ram data
                            260 ;--------------------------------------------------------
                            261 	.area IABS    (ABS,DATA)
                            262 	.area IABS    (ABS,DATA)
                            263 ;--------------------------------------------------------
                            264 ; bit data
                            265 ;--------------------------------------------------------
                            266 	.area BSEG    (BIT)
   0000                     267 _unit::
   0000                     268 	.ds 1
                            269 ;--------------------------------------------------------
                            270 ; paged external ram data
                            271 ;--------------------------------------------------------
                            272 	.area PSEG    (PAG,XDATA)
                            273 ;--------------------------------------------------------
                            274 ; external ram data
                            275 ;--------------------------------------------------------
                            276 	.area XSEG    (XDATA)
                    FFC0    277 _dados	=	0xffc0
                    FFC1    278 _display	=	0xffc1
                            279 ;--------------------------------------------------------
                            280 ; absolute external ram data
                            281 ;--------------------------------------------------------
                            282 	.area XABS    (ABS,XDATA)
                            283 ;--------------------------------------------------------
                            284 ; external initialized ram data
                            285 ;--------------------------------------------------------
                            286 	.area XISEG   (XDATA)
                            287 	.area HOME    (CODE)
                            288 	.area GSINIT0 (CODE)
                            289 	.area GSINIT1 (CODE)
                            290 	.area GSINIT2 (CODE)
                            291 	.area GSINIT3 (CODE)
                            292 	.area GSINIT4 (CODE)
                            293 	.area GSINIT5 (CODE)
                            294 	.area GSINIT  (CODE)
                            295 	.area GSFINAL (CODE)
                            296 	.area CSEG    (CODE)
                            297 ;--------------------------------------------------------
                            298 ; interrupt vector 
                            299 ;--------------------------------------------------------
                            300 	.area HOME    (CODE)
   0000                     301 __interrupt_vect:
   0000 02s00r00            302 	ljmp	__sdcc_gsinit_startup
                            303 ;--------------------------------------------------------
                            304 ; global & static initialisations
                            305 ;--------------------------------------------------------
                            306 	.area HOME    (CODE)
                            307 	.area GSINIT  (CODE)
                            308 	.area GSFINAL (CODE)
                            309 	.area GSINIT  (CODE)
                            310 	.globl __sdcc_gsinit_startup
                            311 	.globl __sdcc_program_startup
                            312 	.globl __start__stack
                            313 	.globl __mcs51_genXINIT
                            314 	.globl __mcs51_genXRAMCLEAR
                            315 	.globl __mcs51_genRAMCLEAR
                            316 	.area GSFINAL (CODE)
   0000 02s00r03            317 	ljmp	__sdcc_program_startup
                            318 ;--------------------------------------------------------
                            319 ; Home
                            320 ;--------------------------------------------------------
                            321 	.area HOME    (CODE)
                            322 	.area HOME    (CODE)
   0003                     323 __sdcc_program_startup:
   0003 12s01rAA            324 	lcall	_main
                            325 ;	return from main will lock up
   0006 80 FE               326 	sjmp .
                            327 ;--------------------------------------------------------
                            328 ; code
                            329 ;--------------------------------------------------------
                            330 	.area CSEG    (CODE)
                            331 ;------------------------------------------------------------
                            332 ;Allocation info for local variables in function 'delay'
                            333 ;------------------------------------------------------------
                            334 ;x                         Allocated to registers r2 r3 
                            335 ;j                         Allocated to registers r4 r5 
                            336 ;------------------------------------------------------------
                            337 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:28: void delay(int x) {
                            338 ;	-----------------------------------------
                            339 ;	 function delay
                            340 ;	-----------------------------------------
   0000                     341 _delay:
                    0002    342 	ar2 = 0x02
                    0003    343 	ar3 = 0x03
                    0004    344 	ar4 = 0x04
                    0005    345 	ar5 = 0x05
                    0006    346 	ar6 = 0x06
                    0007    347 	ar7 = 0x07
                    0000    348 	ar0 = 0x00
                    0001    349 	ar1 = 0x01
   0000 AA 82               350 	mov	r2,dpl
   0002 AB 83               351 	mov	r3,dph
                            352 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:30: while(x-- > 0) for (j = 0; j < 255; j++);
   0004                     353 00101$:
   0004 8A 04               354 	mov	ar4,r2
   0006 8B 05               355 	mov	ar5,r3
   0008 1A                  356 	dec	r2
   0009 BA FF 01            357 	cjne	r2,#0xff,00115$
   000C 1B                  358 	dec	r3
   000D                     359 00115$:
   000D C3                  360 	clr	c
   000E E4                  361 	clr	a
   000F 9C                  362 	subb	a,r4
   0010 74 80               363 	mov	a,#(0x00 ^ 0x80)
   0012 8D F0               364 	mov	b,r5
   0014 63 F0 80            365 	xrl	b,#0x80
   0017 95 F0               366 	subb	a,b
   0019 50 0F               367 	jnc	00107$
   001B 7C FF               368 	mov	r4,#0xFF
   001D 7D 00               369 	mov	r5,#0x00
   001F                     370 00106$:
   001F 1C                  371 	dec	r4
   0020 BC FF 01            372 	cjne	r4,#0xff,00117$
   0023 1D                  373 	dec	r5
   0024                     374 00117$:
   0024 EC                  375 	mov	a,r4
   0025 4D                  376 	orl	a,r5
   0026 70 F7               377 	jnz	00106$
   0028 80 DA               378 	sjmp	00101$
   002A                     379 00107$:
   002A 22                  380 	ret
                            381 ;------------------------------------------------------------
                            382 ;Allocation info for local variables in function 'Display'
                            383 ;------------------------------------------------------------
                            384 ;x                         Allocated to stack - offset -4
                            385 ;n                         Allocated to registers r2 r3 
                            386 ;------------------------------------------------------------
                            387 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:33: void Display(int n, int x) {//n para qual display e x para
                            388 ;	-----------------------------------------
                            389 ;	 function Display
                            390 ;	-----------------------------------------
   002B                     391 _Display:
   002B C0*00               392 	push	_bp
   002D 85 81*00            393 	mov	_bp,sp
   0030 AA 82               394 	mov	r2,dpl
   0032 AB 83               395 	mov	r3,dph
                            396 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:34: display = disp[n];
   0034 EA                  397 	mov	a,r2
   0035 24r10               398 	add	a,#_disp
   0037 F5 82               399 	mov	dpl,a
   0039 EB                  400 	mov	a,r3
   003A 34s00               401 	addc	a,#(_disp >> 8)
   003C F5 83               402 	mov	dph,a
   003E E4                  403 	clr	a
   003F 93                  404 	movc	a,@a+dptr
   0040 90 FF C1            405 	mov	dptr,#_display
   0043 F0                  406 	movx	@dptr,a
                            407 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:35: dados = alg[x];
   0044 E5*00               408 	mov	a,_bp
   0046 24 FC               409 	add	a,#0xfc
   0048 F8                  410 	mov	r0,a
   0049 E6                  411 	mov	a,@r0
   004A 24r00               412 	add	a,#_alg
   004C F5 82               413 	mov	dpl,a
   004E 08                  414 	inc	r0
   004F E6                  415 	mov	a,@r0
   0050 34s00               416 	addc	a,#(_alg >> 8)
   0052 F5 83               417 	mov	dph,a
   0054 E4                  418 	clr	a
   0055 93                  419 	movc	a,@a+dptr
   0056 90 FF C0            420 	mov	dptr,#_dados
   0059 F0                  421 	movx	@dptr,a
   005A D0*00               422 	pop	_bp
   005C 22                  423 	ret
                            424 ;------------------------------------------------------------
                            425 ;Allocation info for local variables in function 'printTemp'
                            426 ;------------------------------------------------------------
                            427 ;temp                      Allocated to registers r2 r3 
                            428 ;------------------------------------------------------------
                            429 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:38: void printTemp() {
                            430 ;	-----------------------------------------
                            431 ;	 function printTemp
                            432 ;	-----------------------------------------
   005D                     433 _printTemp:
                            434 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:40: int temp = unit == C ? tempC : tempF;
   005D 30*00 06            435 	jnb	_unit,00106$
   0060 AA*06               436 	mov	r2,_tempC
   0062 AB*07               437 	mov	r3,(_tempC + 1)
   0064 80 04               438 	sjmp	00107$
   0066                     439 00106$:
   0066 AA*08               440 	mov	r2,_tempF
   0068 AB*09               441 	mov	r3,(_tempF + 1)
   006A                     442 00107$:
                            443 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:42: Display(0, temp/100);
   006A C0 02               444 	push	ar2
   006C C0 03               445 	push	ar3
   006E 74 64               446 	mov	a,#0x64
   0070 C0 E0               447 	push	acc
   0072 E4                  448 	clr	a
   0073 C0 E0               449 	push	acc
   0075 8A 82               450 	mov	dpl,r2
   0077 8B 83               451 	mov	dph,r3
   0079 12s00r00            452 	lcall	__divsint
   007C AC 82               453 	mov	r4,dpl
   007E AD 83               454 	mov	r5,dph
   0080 15 81               455 	dec	sp
   0082 15 81               456 	dec	sp
   0084 C0 04               457 	push	ar4
   0086 C0 05               458 	push	ar5
   0088 90 00 00            459 	mov	dptr,#0x0000
   008B 12s00r2B            460 	lcall	_Display
   008E 15 81               461 	dec	sp
   0090 15 81               462 	dec	sp
                            463 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:43: delay(2);
   0092 90 00 02            464 	mov	dptr,#0x0002
   0095 12s00r00            465 	lcall	_delay
   0098 D0 03               466 	pop	ar3
   009A D0 02               467 	pop	ar2
                            468 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:44: Display(1, temp%100/10);
   009C C0 02               469 	push	ar2
   009E C0 03               470 	push	ar3
   00A0 74 64               471 	mov	a,#0x64
   00A2 C0 E0               472 	push	acc
   00A4 E4                  473 	clr	a
   00A5 C0 E0               474 	push	acc
   00A7 8A 82               475 	mov	dpl,r2
   00A9 8B 83               476 	mov	dph,r3
   00AB 12s00r00            477 	lcall	__modsint
   00AE AC 82               478 	mov	r4,dpl
   00B0 AD 83               479 	mov	r5,dph
   00B2 15 81               480 	dec	sp
   00B4 15 81               481 	dec	sp
   00B6 74 0A               482 	mov	a,#0x0A
   00B8 C0 E0               483 	push	acc
   00BA E4                  484 	clr	a
   00BB C0 E0               485 	push	acc
   00BD 8C 82               486 	mov	dpl,r4
   00BF 8D 83               487 	mov	dph,r5
   00C1 12s00r00            488 	lcall	__divsint
   00C4 AC 82               489 	mov	r4,dpl
   00C6 AD 83               490 	mov	r5,dph
   00C8 15 81               491 	dec	sp
   00CA 15 81               492 	dec	sp
   00CC C0 04               493 	push	ar4
   00CE C0 05               494 	push	ar5
   00D0 90 00 01            495 	mov	dptr,#0x0001
   00D3 12s00r2B            496 	lcall	_Display
   00D6 15 81               497 	dec	sp
   00D8 15 81               498 	dec	sp
                            499 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:45: delay(2);
   00DA 90 00 02            500 	mov	dptr,#0x0002
   00DD 12s00r00            501 	lcall	_delay
   00E0 D0 03               502 	pop	ar3
   00E2 D0 02               503 	pop	ar2
                            504 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:46: Display(2, temp%10);
   00E4 74 0A               505 	mov	a,#0x0A
   00E6 C0 E0               506 	push	acc
   00E8 E4                  507 	clr	a
   00E9 C0 E0               508 	push	acc
   00EB 8A 82               509 	mov	dpl,r2
   00ED 8B 83               510 	mov	dph,r3
   00EF 12s00r00            511 	lcall	__modsint
   00F2 AA 82               512 	mov	r2,dpl
   00F4 AB 83               513 	mov	r3,dph
   00F6 15 81               514 	dec	sp
   00F8 15 81               515 	dec	sp
   00FA C0 02               516 	push	ar2
   00FC C0 03               517 	push	ar3
   00FE 90 00 02            518 	mov	dptr,#0x0002
   0101 12s00r2B            519 	lcall	_Display
   0104 15 81               520 	dec	sp
   0106 15 81               521 	dec	sp
                            522 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:47: delay(2);
   0108 90 00 02            523 	mov	dptr,#0x0002
   010B 12s00r00            524 	lcall	_delay
   010E 30*00 13            525 	jnb	_unit,00102$
                            526 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:50: Display(3, 12);
   0111 74 0C               527 	mov	a,#0x0C
   0113 C0 E0               528 	push	acc
   0115 E4                  529 	clr	a
   0116 C0 E0               530 	push	acc
   0118 90 00 03            531 	mov	dptr,#0x0003
   011B 12s00r2B            532 	lcall	_Display
   011E 15 81               533 	dec	sp
   0120 15 81               534 	dec	sp
   0122 80 11               535 	sjmp	00103$
   0124                     536 00102$:
                            537 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:52: Display(3, 15);
   0124 74 0F               538 	mov	a,#0x0F
   0126 C0 E0               539 	push	acc
   0128 E4                  540 	clr	a
   0129 C0 E0               541 	push	acc
   012B 90 00 03            542 	mov	dptr,#0x0003
   012E 12s00r2B            543 	lcall	_Display
   0131 15 81               544 	dec	sp
   0133 15 81               545 	dec	sp
   0135                     546 00103$:
                            547 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:54: delay(2);
   0135 90 00 02            548 	mov	dptr,#0x0002
   0138 02s00r00            549 	ljmp	_delay
                            550 ;------------------------------------------------------------
                            551 ;Allocation info for local variables in function 'toFahrenheit'
                            552 ;------------------------------------------------------------
                            553 ;temp                      Allocated to registers r2 r3 
                            554 ;------------------------------------------------------------
                            555 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:57: int toFahrenheit(int temp) {
                            556 ;	-----------------------------------------
                            557 ;	 function toFahrenheit
                            558 ;	-----------------------------------------
   013B                     559 _toFahrenheit:
   013B AA 82               560 	mov	r2,dpl
   013D AB 83               561 	mov	r3,dph
                            562 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:58: return temp * 18 / 10 + 32;
   013F C0 02               563 	push	ar2
   0141 C0 03               564 	push	ar3
   0143 90 00 12            565 	mov	dptr,#0x0012
   0146 12s00r00            566 	lcall	__mulint
   0149 AA 82               567 	mov	r2,dpl
   014B AB 83               568 	mov	r3,dph
   014D 15 81               569 	dec	sp
   014F 15 81               570 	dec	sp
   0151 74 0A               571 	mov	a,#0x0A
   0153 C0 E0               572 	push	acc
   0155 E4                  573 	clr	a
   0156 C0 E0               574 	push	acc
   0158 8A 82               575 	mov	dpl,r2
   015A 8B 83               576 	mov	dph,r3
   015C 12s00r00            577 	lcall	__divsint
   015F AA 82               578 	mov	r2,dpl
   0161 AB 83               579 	mov	r3,dph
   0163 15 81               580 	dec	sp
   0165 15 81               581 	dec	sp
   0167 74 20               582 	mov	a,#0x20
   0169 2A                  583 	add	a,r2
   016A F5 82               584 	mov	dpl,a
   016C E4                  585 	clr	a
   016D 3B                  586 	addc	a,r3
   016E F5 83               587 	mov	dph,a
   0170 22                  588 	ret
                            589 ;------------------------------------------------------------
                            590 ;Allocation info for local variables in function 'toCelsius'
                            591 ;------------------------------------------------------------
                            592 ;temp                      Allocated to registers r2 r3 
                            593 ;------------------------------------------------------------
                            594 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:61: int toCelsius(int temp) {
                            595 ;	-----------------------------------------
                            596 ;	 function toCelsius
                            597 ;	-----------------------------------------
   0171                     598 _toCelsius:
   0171 AA 82               599 	mov	r2,dpl
   0173 AB 83               600 	mov	r3,dph
                            601 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:62: return (temp - 32) * 10 / 18;
   0175 EA                  602 	mov	a,r2
   0176 24 E0               603 	add	a,#0xe0
   0178 FA                  604 	mov	r2,a
   0179 EB                  605 	mov	a,r3
   017A 34 FF               606 	addc	a,#0xff
   017C FB                  607 	mov	r3,a
   017D C0 02               608 	push	ar2
   017F C0 03               609 	push	ar3
   0181 90 00 0A            610 	mov	dptr,#0x000A
   0184 12s00r00            611 	lcall	__mulint
   0187 AA 82               612 	mov	r2,dpl
   0189 AB 83               613 	mov	r3,dph
   018B 15 81               614 	dec	sp
   018D 15 81               615 	dec	sp
   018F 74 12               616 	mov	a,#0x12
   0191 C0 E0               617 	push	acc
   0193 E4                  618 	clr	a
   0194 C0 E0               619 	push	acc
   0196 8A 82               620 	mov	dpl,r2
   0198 8B 83               621 	mov	dph,r3
   019A 12s00r00            622 	lcall	__divsint
   019D AA 82               623 	mov	r2,dpl
   019F AB 83               624 	mov	r3,dph
   01A1 15 81               625 	dec	sp
   01A3 15 81               626 	dec	sp
   01A5 8A 82               627 	mov	dpl,r2
   01A7 8B 83               628 	mov	dph,r3
   01A9 22                  629 	ret
                            630 ;------------------------------------------------------------
                            631 ;Allocation info for local variables in function 'main'
                            632 ;------------------------------------------------------------
                            633 ;------------------------------------------------------------
                            634 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:65: void main(void) {
                            635 ;	-----------------------------------------
                            636 ;	 function main
                            637 ;	-----------------------------------------
   01AA                     638 _main:
                            639 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:67: lastsw1 = 0;
                            640 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:68: lastsw2 = 0;
                            641 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:69: lastsw3 = 0;
   01AA E4                  642 	clr	a
   01AB F5*00               643 	mov	_lastsw1,a
   01AD F5*01               644 	mov	(_lastsw1 + 1),a
   01AF F5*02               645 	mov	_lastsw2,a
   01B1 F5*03               646 	mov	(_lastsw2 + 1),a
   01B3 F5*04               647 	mov	_lastsw3,a
   01B5 F5*05               648 	mov	(_lastsw3 + 1),a
                            649 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:71: unit = C;
   01B7 D2*00               650 	setb	_unit
                            651 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:72: tempC = 25;
   01B9 75*06 19            652 	mov	_tempC,#0x19
   01BC E4                  653 	clr	a
   01BD F5*07               654 	mov	(_tempC + 1),a
                            655 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:73: tempF = toFahrenheit(tempC);
   01BF 90 00 19            656 	mov	dptr,#0x0019
   01C2 12s01r3B            657 	lcall	_toFahrenheit
   01C5 85 82*08            658 	mov	_tempF,dpl
   01C8 85 83*09            659 	mov	(_tempF + 1),dph
                            660 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:75: while(1) {
   01CB                     661 00122$:
                            662 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:77: printTemp();
   01CB 12s00r5D            663 	lcall	_printTemp
                            664 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:79: if (sw1 != lastsw1) {
   01CE A2 97               665 	mov	c,_P1_7
   01D0 E4                  666 	clr	a
   01D1 33                  667 	rlc	a
   01D2 FA                  668 	mov	r2,a
   01D3 7B 00               669 	mov	r3,#0x00
   01D5 B5*00 06            670 	cjne	a,_lastsw1,00149$
   01D8 EB                  671 	mov	a,r3
   01D9 B5*01 02            672 	cjne	a,(_lastsw1 + 1),00149$
   01DC 80 6C               673 	sjmp	00108$
   01DE                     674 00149$:
                            675 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:80: lastsw1 = sw1;
   01DE A2 97               676 	mov	c,_P1_7
   01E0 E4                  677 	clr	a
   01E1 33                  678 	rlc	a
   01E2 F5*00               679 	mov	_lastsw1,a
   01E4 75*01 00            680 	mov	(_lastsw1 + 1),#0x00
                            681 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:81: if (!sw1) {
   01E7 20 97 60            682 	jb	_P1_7,00108$
                            683 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:91: }
   01EA 30*00 2D            684 	jnb	_unit,00102$
                            685 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:84: tempC = tempC < 537 ? tempC + 1 : 537;
   01ED C3                  686 	clr	c
   01EE E5*06               687 	mov	a,_tempC
   01F0 94 19               688 	subb	a,#0x19
   01F2 E5*07               689 	mov	a,(_tempC + 1)
   01F4 94 02               690 	subb	a,#0x02
   01F6 50 0B               691 	jnc	00126$
   01F8 74 01               692 	mov	a,#0x01
   01FA 25*06               693 	add	a,_tempC
   01FC FA                  694 	mov	r2,a
   01FD E4                  695 	clr	a
   01FE 35*07               696 	addc	a,(_tempC + 1)
   0200 FB                  697 	mov	r3,a
   0201 80 04               698 	sjmp	00127$
   0203                     699 00126$:
   0203 7A 19               700 	mov	r2,#0x19
   0205 7B 02               701 	mov	r3,#0x02
   0207                     702 00127$:
   0207 8A*06               703 	mov	_tempC,r2
   0209 8B*07               704 	mov	(_tempC + 1),r3
                            705 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:85: tempF = toFahrenheit(tempC);
   020B 85*06 82            706 	mov	dpl,_tempC
   020E 85*07 83            707 	mov	dph,(_tempC + 1)
   0211 12s01r3B            708 	lcall	_toFahrenheit
   0214 85 82*08            709 	mov	_tempF,dpl
   0217 85 83*09            710 	mov	(_tempF + 1),dph
   021A                     711 00102$:
   021A 20*00 2D            712 	jb	_unit,00108$
                            713 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:88: tempF = tempF < 999 ? tempF + 1 : 999;
   021D C3                  714 	clr	c
   021E E5*08               715 	mov	a,_tempF
   0220 94 E7               716 	subb	a,#0xE7
   0222 E5*09               717 	mov	a,(_tempF + 1)
   0224 94 03               718 	subb	a,#0x03
   0226 50 0B               719 	jnc	00128$
   0228 74 01               720 	mov	a,#0x01
   022A 25*08               721 	add	a,_tempF
   022C FA                  722 	mov	r2,a
   022D E4                  723 	clr	a
   022E 35*09               724 	addc	a,(_tempF + 1)
   0230 FB                  725 	mov	r3,a
   0231 80 04               726 	sjmp	00129$
   0233                     727 00128$:
   0233 7A E7               728 	mov	r2,#0xE7
   0235 7B 03               729 	mov	r3,#0x03
   0237                     730 00129$:
   0237 8A*08               731 	mov	_tempF,r2
   0239 8B*09               732 	mov	(_tempF + 1),r3
                            733 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:89: tempC = toCelsius(tempF);
   023B 85*08 82            734 	mov	dpl,_tempF
   023E 85*09 83            735 	mov	dph,(_tempF + 1)
   0241 12s01r71            736 	lcall	_toCelsius
   0244 85 82*06            737 	mov	_tempC,dpl
   0247 85 83*07            738 	mov	(_tempC + 1),dph
   024A                     739 00108$:
                            740 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:96: if (sw2 != lastsw2) {
   024A A2 96               741 	mov	c,_P1_6
   024C E4                  742 	clr	a
   024D 33                  743 	rlc	a
   024E FA                  744 	mov	r2,a
   024F 7B 00               745 	mov	r3,#0x00
   0251 B5*02 06            746 	cjne	a,_lastsw2,00155$
   0254 EB                  747 	mov	a,r3
   0255 B5*03 02            748 	cjne	a,(_lastsw2 + 1),00155$
   0258 80 68               749 	sjmp	00116$
   025A                     750 00155$:
                            751 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:98: lastsw2 = sw2;
   025A A2 96               752 	mov	c,_P1_6
   025C E4                  753 	clr	a
   025D 33                  754 	rlc	a
   025E F5*02               755 	mov	_lastsw2,a
   0260 75*03 00            756 	mov	(_lastsw2 + 1),#0x00
                            757 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:100: if (!sw2) {
   0263 20 96 5C            758 	jb	_P1_6,00116$
                            759 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:110: }		
   0266 30*00 29            760 	jnb	_unit,00110$
                            761 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:103: tempC = tempC > 0 ? tempC - 1 : 0;
   0269 E5*06               762 	mov	a,_tempC
   026B 45*07               763 	orl	a,(_tempC + 1)
   026D 60 0C               764 	jz	00130$
   026F E5*06               765 	mov	a,_tempC
   0271 24 FF               766 	add	a,#0xff
   0273 FA                  767 	mov	r2,a
   0274 E5*07               768 	mov	a,(_tempC + 1)
   0276 34 FF               769 	addc	a,#0xff
   0278 FB                  770 	mov	r3,a
   0279 80 04               771 	sjmp	00131$
   027B                     772 00130$:
   027B 7A 00               773 	mov	r2,#0x00
   027D 7B 00               774 	mov	r3,#0x00
   027F                     775 00131$:
   027F 8A*06               776 	mov	_tempC,r2
   0281 8B*07               777 	mov	(_tempC + 1),r3
                            778 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:104: tempF = toFahrenheit(tempC);
   0283 85*06 82            779 	mov	dpl,_tempC
   0286 85*07 83            780 	mov	dph,(_tempC + 1)
   0289 12s01r3B            781 	lcall	_toFahrenheit
   028C 85 82*08            782 	mov	_tempF,dpl
   028F 85 83*09            783 	mov	(_tempF + 1),dph
   0292                     784 00110$:
   0292 20*00 2D            785 	jb	_unit,00116$
                            786 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:107: tempF = tempF > 32 ? tempF - 1 : 32;
   0295 C3                  787 	clr	c
   0296 74 20               788 	mov	a,#0x20
   0298 95*08               789 	subb	a,_tempF
   029A E4                  790 	clr	a
   029B 95*09               791 	subb	a,(_tempF + 1)
   029D 50 0C               792 	jnc	00132$
   029F E5*08               793 	mov	a,_tempF
   02A1 24 FF               794 	add	a,#0xff
   02A3 FA                  795 	mov	r2,a
   02A4 E5*09               796 	mov	a,(_tempF + 1)
   02A6 34 FF               797 	addc	a,#0xff
   02A8 FB                  798 	mov	r3,a
   02A9 80 04               799 	sjmp	00133$
   02AB                     800 00132$:
   02AB 7A 20               801 	mov	r2,#0x20
   02AD 7B 00               802 	mov	r3,#0x00
   02AF                     803 00133$:
   02AF 8A*08               804 	mov	_tempF,r2
   02B1 8B*09               805 	mov	(_tempF + 1),r3
                            806 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:108: tempC = toCelsius(tempF);
   02B3 85*08 82            807 	mov	dpl,_tempF
   02B6 85*09 83            808 	mov	dph,(_tempF + 1)
   02B9 12s01r71            809 	lcall	_toCelsius
   02BC 85 82*06            810 	mov	_tempC,dpl
   02BF 85 83*07            811 	mov	(_tempC + 1),dph
   02C2                     812 00116$:
                            813 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:115: if (sw3 != lastsw3) {
   02C2 A2 95               814 	mov	c,_P1_5
   02C4 E4                  815 	clr	a
   02C5 33                  816 	rlc	a
   02C6 FA                  817 	mov	r2,a
   02C7 7B 00               818 	mov	r3,#0x00
   02C9 B5*04 07            819 	cjne	a,_lastsw3,00161$
   02CC EB                  820 	mov	a,r3
   02CD B5*05 03            821 	cjne	a,(_lastsw3 + 1),00161$
   02D0 02s01rCB            822 	ljmp	00122$
   02D3                     823 00161$:
                            824 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:117: lastsw3 = sw3;
   02D3 A2 95               825 	mov	c,_P1_5
   02D5 E4                  826 	clr	a
   02D6 33                  827 	rlc	a
   02D7 F5*04               828 	mov	_lastsw3,a
   02D9 75*05 00            829 	mov	(_lastsw3 + 1),#0x00
                            830 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:119: if (!sw3) {
   02DC 30 95 03            831 	jnb	_P1_5,00162$
   02DF 02s01rCB            832 	ljmp	00122$
   02E2                     833 00162$:
                            834 ;	C:\Users\POLONI~1.PON\DOCUME~1\8051-D~2\MAIN_T~1.C:120: unit = !unit; 
   02E2 B2*00               835 	cpl	_unit
   02E4 02s01rCB            836 	ljmp	00122$
                            837 	.area CSEG    (CODE)
                            838 	.area CONST   (CODE)
   0000                     839 _alg:
   0000 3F                  840 	.db #0x3F
   0001 06                  841 	.db #0x06
   0002 5B                  842 	.db #0x5B
   0003 4F                  843 	.db #0x4F
   0004 66                  844 	.db #0x66
   0005 6D                  845 	.db #0x6D
   0006 7D                  846 	.db #0x7D
   0007 07                  847 	.db #0x07
   0008 7F                  848 	.db #0x7F
   0009 67                  849 	.db #0x67
   000A 77                  850 	.db #0x77
   000B 7C                  851 	.db #0x7C
   000C 39                  852 	.db #0x39
   000D 5E                  853 	.db #0x5E
   000E 79                  854 	.db #0x79
   000F 71                  855 	.db #0x71
   0010                     856 _disp:
   0010 01                  857 	.db #0x01
   0011 02                  858 	.db #0x02
   0012 04                  859 	.db #0x04
   0013 08                  860 	.db #0x08
                            861 	.area XINIT   (CODE)
                            862 	.area CABS    (ABS,CODE)
